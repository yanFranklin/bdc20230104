package cn.gtmap.realestate.common.core.dto.exchange.shucheng.dzzz;

import cn.gtmap.realestate.common.core.dto.exchange.SdkApiAbstractApp;
import com.alibaba.fastjson.JSONObject;
import com.iflytek.fsp.shield.java.sdk.constant.HttpConstant;
import com.iflytek.fsp.shield.java.sdk.constant.SdkConstant;
import com.iflytek.fsp.shield.java.sdk.enums.Method;
import com.iflytek.fsp.shield.java.sdk.http.ApiClient;
import com.iflytek.fsp.shield.java.sdk.model.ApiRequest;
import com.iflytek.fsp.shield.java.sdk.model.ApiResponse;
import org.slf4j.LoggerFactory;

import java.util.Map;

/**
 * @author <a href="mailto:huangjian@gtmap.cn">huangjian</a>
 * @version 1.0  2020-01-16
 * @description 获取电子证照的token
 */
public class ShuchengSdkApiDzzzZzqzTokenApp extends SdkApiAbstractApp {


    private static final org.slf4j.Logger LOGGER = LoggerFactory.getLogger(ShuchengSdkApiDzzzZzqzTokenApp.class);

    public ShuchengSdkApiDzzzZzqzTokenApp() {
        this.apiClient = new ApiClient();
        this.apiClient.init();
        this.appId = "49e0ab41b1db4b64a446bd7b5baceb9d";
        this.appSecret = "C6FAE1476811FF2FEED9B1923EAEB43B";
        this.host = "59.203.234.225";
        this.httpPort = 4989;
        this.httpsPort = 443;
        this.stage = "RELEASE";
        this.equipmentNo = "XXX";
        this.signStrategyUrl = "/getSignStrategy";
        this.tokenUrl = "/getTokenUrl";
        this.publicKey = "305C300D06092A864886F70D0101010500034B0030480241008A64C8D7B46B9D89ADD095CFE67ED476F572952ECB79292E9EC47C3EE53D120C427C0A670859B245065E2B9ED06EEA5ABE06E041BB28327850A35F9EE47798390203010001";
        this.icloudlockEnabled = false;//关闭云锁验证
    }

    @Override
    public ApiRequest getRequest() {
        ApiRequest apiRequest = new ApiRequest(HttpConstant.SCHEME_HTTP, Method.POST, "/criterion/certificateMaintain", SdkConstant.AUTH_TYPE_DEFAULT, "242d458b48214a2fa0164fa598519641");
        return apiRequest;
    }

    @Override
    public ApiResponse getApiResponse(Map<String, Object> requestParamMap) {
        ApiRequest apiRequest = getRequest();
      /*  initSignStrategy(apiRequest);
        setParam(apiRequest, requestParamMap);*/

        try {

            apiRequest.setBody(JSONObject.toJSONString(requestParamMap).getBytes("UTF-8"));
//            makeSignCertificate(JSONObject.toJSONString(requestParamMap).getBytes("UTF-8"));
//            LOGGER.info("舒城电子证照请求参数：{}", apiRequest.getBody());

        } catch (Exception e) {
            e.printStackTrace();
        }
        return syncInvoke(apiRequest);
    }


    /**
     * Version:202011091708438308
     */
    public ApiResponse makeSignCertificate(byte[] body) {
        ApiRequest apiRequest = new ApiRequest(HttpConstant.SCHEME_HTTP, Method.POST, "/criterion/makeSignCertificate", SdkConstant.AUTH_TYPE_DEFAULT, "242d458b48214a2fa0164fa598519641");
        // initSignStrategy(apiRequest);
        LOGGER.info("舒城电子证照body代码测试！");
        apiRequest.setBody(body);

        return syncInvoke(apiRequest);
    }

   /* public static void main(String[] args) throws Exception{
        JSONObject paramObj =new JSONObject();
        paramObj.put("contentCode", "1134142500323877890026");
        //paramObj.put("infoTypeCode","001");
        paramObj.put("ownerId", "91341523798129996E");
        paramObj.put("ownerName", "舒城县惠源商贸有限责任公司");
        paramObj.put("infoValidityBegin", "20220215");
        paramObj.put("format","ofd");
        paramObj.put("slbh","202202150004");
        //paramObj.put("infoValidityEnd", "2041-01-01");
        JSONObject surface = new JSONObject();
        surface.put("djh", "0000031");
        surface.put("qt", "不动产权证书号:皖(2019)舒城县不动产权第0004178号\n抵押方式:一般抵押\n担保债权数额,45万元\n债务履行期限：2022年02月15日至2022年02月28日");
        surface.put("fj", "业务编号：202202150004");
        surface.put("zmh2", "2022");
        surface.put("zmh1", "皖");
        surface.put("bh", "34000000016");
        surface.put("zmh3", "舒城县");
        surface.put("infoCode", "皖(2022)舒城县不动产证明第0000031号");
        surface.put("czrsfzh1", "91341523798129996E");
        surface.put("cxewm", "");
        surface.put("n", "2022");
        surface.put("r", "15");
        surface.put("zl", "城关镇古城北路青青家园拆迁安置工程1幢5层503室");
        surface.put("ywr", "王伟辉 徐林");
        surface.put("qlr", "舒城县惠源商贸有限责任公司");
        surface.put("whewm", "");
        surface.put("bdcdyh", "341523005104GB01004F00010431");
        surface.put("czr1", "舒城县惠源商贸有限责任公司");
        surface.put("qlhsx", "抵押权");
        surface.put("y", "2");
        surface.put("ewm", "");
        paramObj.put("data", surface.toJSONString());
//        byte[] bytes = JSONObject.toJSONString(paramObj).getBytes("UTF-8");
        ShuchengSdkApiDzzzZzqzApp test = new ShuchengSdkApiDzzzZzqzApp();
        ApiResponse response = test.getApiResponse(paramObj);
        System.out.println(new String(response.getBody(), "UTF-8"));
    }*/
}
