<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="bdcDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"
          primary="true">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.exchange.url}"/>
        <property name="username" value="${spring.datasource.exchange.username}"/>
        <property name="password" value="${spring.datasource.exchange.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="100"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT SYSDATE FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>
    <bean id="commonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="bdcSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="bdcEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper">
        <property name="commonMapper" ref="commonMapper"/>
    </bean>
    <bean name="bdcScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.exchange"/>
        <property name="sqlSessionFactoryBeanName" value="bdcSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="bdcSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="bdcDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/exchange/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>
    <bean id="bdcSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="bdcSqlSessionFactory"/>
    </bean>
    <!--支持分页 -->
    <bean id="bdcRepository" class="cn.gtmap.realestate.common.core.support.mybatis.page.repository.Repository">
        <property name="sqlSessionTemplate" ref="bdcSqlSessionTemplate"/>
    </bean>

    <bean id="hlwDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.hlw.url}"/>
        <property name="username" value="${spring.datasource.hlw.username}"/>
        <property name="password" value="${spring.datasource.hlw.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="100"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--<property name="validationQuery" value="SELECT SYSDATE FROM DUAL"/>-->
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>
    <bean id="hlwCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="hlwSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查(默认为hlw) -->
    <bean id="hlwEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper">
        <property name="commonMapper" ref="hlwCommonMapper"/>
    </bean>
    <bean name="hlwScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.hlw"/>
        <property name="sqlSessionFactoryBeanName" value="hlwSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="hlwSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="hlwDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/hlw/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>
    <bean id="hlwSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="hlwSqlSessionFactory"/>
    </bean>
    <!--支持分页 -->
    <bean id="hlwRepository" class="cn.gtmap.realestate.common.core.support.mybatis.page.repository.Repository">
        <property name="sqlSessionTemplate" ref="hlwSqlSessionTemplate"/>
    </bean>

    <!-- 土地信息服务连接 -->
    <bean id="tdDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.td.url}"/>
        <property name="username" value="${spring.datasource.td.username}"/>
        <property name="password" value="${spring.datasource.td.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="100"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--<property name="validationQuery" value="SELECT SYSDATE FROM DUAL"/>-->
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>
    <bean id="tdCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="tdSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查(默认为hlw) -->
    <bean id="tdEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper">
        <property name="commonMapper" ref="tdCommonMapper"/>
    </bean>
    <bean name="tdScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.td"/>
        <property name="sqlSessionFactoryBeanName" value="tdSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="tdSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="tdDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/td/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>
    <bean id="tdsqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="tdSqlSessionFactory"/>
    </bean>
    <!--支持分页 -->
    <bean id="tdRepository" class="cn.gtmap.realestate.common.core.support.mybatis.page.repository.Repository">
        <property name="sqlSessionTemplate" ref="tdsqlSessionTemplate"/>
    </bean>



    <!--淮安数据源-->
    <bean id="yzwDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.yzw.url}" />
        <property name="username" value="${spring.datasource.yzw.username}" />
        <property name="password" value="${spring.datasource.yzw.password}" />
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="100" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT SYSDATE FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>
    <bean id="yzwCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="yzwSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="yzwEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper" >
        <property name="commonMapper" ref="yzwCommonMapper"/>
    </bean>
    <bean name="yzwScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.yzw"/>
        <property name="sqlSessionFactoryBeanName" value="yzwSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="yzwSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="yzwDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/yzw/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>

    <!--登记2.0整合数据源 -->
    <bean id="ydjzhDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.ydjzh.url}" />
        <property name="username" value="${spring.datasource.ydjzh.username}" />
        <property name="password" value="${spring.datasource.ydjzh.password}" />
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="100" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT SYSDATE FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>
    <bean id="ydjzhCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="ydjzhSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="ydjzhEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper" >
        <property name="commonMapper" ref="ydjzhCommonMapper"/>
    </bean>
    <bean name="ydjzhScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.ydjzh"/>
        <property name="sqlSessionFactoryBeanName" value="ydjzhSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="ydjzhSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="ydjzhDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/ydjzh/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>

    <!--登记2.0备份数据源 -->
    <bean id="ydjbfDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.ydjbf.url}" />
        <property name="username" value="${spring.datasource.ydjbf.username}" />
        <property name="password" value="${spring.datasource.ydjbf.password}" />
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="100" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT SYSDATE FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>
    <bean id="ydjbfCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="ydjbfSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="ydjbfEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper" >
        <property name="commonMapper" ref="ydjbfCommonMapper"/>
    </bean>
    <bean name="ydjbfScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.ydjbf"/>
        <property name="sqlSessionFactoryBeanName" value="ydjbfSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="ydjbfSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="ydjbfDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/ydjbf/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>


    <bean id="fcjyDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.fcjy.url}"/>
        <property name="username" value="${spring.datasource.fcjy.username}"/>
        <property name="password" value="${spring.datasource.fcjy.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="100"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--<property name="validationQuery" value="SELECT SYSDATE FROM DUAL"/>-->
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>

    <bean id="fcjyCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="fcjySqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="fcjyEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper">
        <property name="commonMapper" ref="fcjyCommonMapper"/>
    </bean>
    <bean name="fcjyScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.fcjy"/>
        <property name="sqlSessionFactoryBeanName" value="fcjySqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="fcjySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="fcjyDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/fcjy/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>


    <bean id="qzkDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.qzk.url}" />
        <property name="username" value="${spring.datasource.qzk.username}" />
        <property name="password" value="${spring.datasource.qzk.password}" />
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="100" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>

    <bean id="qzkCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="qzkSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="qzkEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper" >
        <property name="commonMapper" ref="qzkCommonMapper"/>
    </bean>
    <bean name="qzkScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.qzk"/>
        <property name="sqlSessionFactoryBeanName" value="qzkSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="qzkSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="qzkDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/qzk/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>


    <!--增加登记推送办结节点推送到中间库 -->

    <bean id="bjzjkDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.bjzjk.url}" />
        <property name="username" value="${spring.datasource.bjzjk.username}" />
        <property name="password" value="${spring.datasource.bjzjk.password}" />
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="1" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>

    <bean id="bjzjkCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="bjzjkSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="bjzjkEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper" >
        <property name="commonMapper" ref="bjzjkCommonMapper"/>
    </bean>
    <bean name="bjzjkScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.bjzjk"/>
        <property name="sqlSessionFactoryBeanName" value="bjzjkSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="bjzjkSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="bjzjkDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/bjzjk/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>


    <bean id="gxsjDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.gxsj.url}"/>
        <property name="username" value="${spring.datasource.gxsj.username}"/>
        <property name="password" value="${spring.datasource.gxsj.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="100"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT SYSDATE FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <!--<property name="filters" value="stat" />-->
    </bean>

    <bean id="gxsjCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.realestate.common.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="gxsjSqlSessionFactory"/>
    </bean>
    <!--支持公用mapper处理增删改查 -->
    <bean id="gxsjEntityMapper" class="cn.gtmap.realestate.common.core.support.mybatis.mapper.EntityMapper">
        <property name="commonMapper" ref="gxsjCommonMapper"/>
    </bean>
    <bean name="gxsjScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gtmap.realestate.etl.core.mapper.gxsj"/>
        <property name="sqlSessionFactoryBeanName" value="exchangeSqlSessionFactory"/>
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->
    <bean id="gxsjSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="gxsjDataSource"
          p:configLocation="classpath:conf/mapper/mybatis-configuration.xml">
        <property name="mapperLocations">
            <list>
                <value>classpath:conf/mapper/gxsj/*.xml</value>
            </list>
        </property>
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
                <ref bean="mybatisPaginationOrderInterceptor"/>
                <ref bean="mybatisTdPaginationInterceptor"/>
                <ref bean="mybatisTdPaginationOrderInterceptor"/>
            </list>
        </property>
    </bean>




    <bean id="mybatisPaginationInterceptor"
          class="cn.gtmap.realestate.common.core.support.mybatis.page.PaginationInterceptor">
        <property name="properties">
            <props>
                <prop key="dialect">oracle</prop>
                <prop key="stmtIdRegex">*.*ByPage</prop>
            </props>
        </property>
        <property name="pageSqlLimitStr" value="${page.sql.limit:}"/>
        <property name="notLimitSqlSetStr" value="${page.sql.nolimit:}"/>
    </bean>

    <bean id="mybatisPaginationOrderInterceptor"
          class="cn.gtmap.realestate.common.core.support.mybatis.page.PaginationInterceptor">
        <property name="properties">
            <props>
                <prop key="dialect">oracleorder</prop>
                <prop key="stmtIdRegex">*.*ByPageOrder</prop>
            </props>
        </property>
        <property name="pageSqlLimitStr" value="${page.sql.limit:}"/>
        <property name="notLimitSqlSetStr" value="${page.sql.nolimit:}"/>
    </bean>

    <bean id="mybatisTdPaginationInterceptor"
          class="cn.gtmap.realestate.common.core.support.mybatis.page.PaginationInterceptor">
        <property name="properties">
            <props>
                <prop key="dialect">oracle</prop>
                <prop key="stmtIdRegex">*.*ByTdPage</prop>
            </props>
        </property>
        <property name="pageSqlLimitStr" value="${page.sql.limit:}"/>
        <property name="notLimitSqlSetStr" value="${page.sql.nolimit:}"/>
    </bean>

    <bean id="mybatisTdPaginationOrderInterceptor"
          class="cn.gtmap.realestate.common.core.support.mybatis.page.PaginationInterceptor">
        <property name="properties">
            <props>
                <prop key="dialect">oracleorder</prop>
                <prop key="stmtIdRegex">*.*ByTdPageOrder</prop>
            </props>
        </property>
        <property name="pageSqlLimitStr" value="${page.sql.limit:}"/>
        <property name="notLimitSqlSetStr" value="${page.sql.nolimit:}"/>
    </bean>


    <!--事务-->
    <import resource="config-trans.xml"/>
</beans>
