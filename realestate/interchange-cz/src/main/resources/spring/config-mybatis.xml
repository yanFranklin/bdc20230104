<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="mybatisPaginationInterceptor"
          class="cn.gtmap.interchange.core.support.mybatis.page.PaginationInterceptor">
        <property name="properties">
            <props>
                <prop key="dialect">oracle</prop>
                <prop key="stmtIdRegex">*.*ByPage</prop>
            </props>
        </property>
    </bean>

    <!-- 共享数据源配置 -->
    <bean id="gxDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" primary="true">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.gx.url}" />
        <property name="username" value="${spring.datasource.gx.username}" />
        <property name="password" value="${spring.datasource.gx.password}" />

        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="10" />
        <property name="maxActive" value="100" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT SYSDATE FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800" />
        <property name="logAbandoned" value="true" />

        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="config" />
    </bean>

    <bean id="gxSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="gxDataSource" />
        <property name="configLocation"  value="classpath:spring/mybatis-configuration.xml" />
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/gx/*.xml</value>
            </list>
        </property>
        <!-- 分页查询 -->
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="gxSqlSessionTemplate" primary="true" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="gxSqlSessionFactory"/>
    </bean>

    <bean name="gxMapperScannerConfigurer" primary="true" class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name="basePackage" value="cn.gtmap.interchange.core.mapper.gx" />
        <property name="sqlSessionFactoryBeanName" value="gxSqlSessionFactory" />
    </bean>

    <bean id="gxCommonMapper" primary="true" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.interchange.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="gxSqlSessionFactory"/>
    </bean>

    <bean id="gxEntityMapper" primary="true" class="cn.gtmap.interchange.core.support.mybatis.mapper.EntityMapper" >
        <property name="commonMapper" ref="gxCommonMapper"/>
    </bean>

    <bean id="gxRepository" primary="true" class="cn.gtmap.interchange.core.support.mybatis.page.repository.Repository">
        <property name="sqlSessionTemplate" ref="gxSqlSessionTemplate"/>
    </bean>

    <!-- yzw 数据源 -->
    <bean id="yzwDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${spring.datasource.yzw.url}"/>
        <property name="username" value="${spring.datasource.yzw.username}"/>
        <property name="password" value="${spring.datasource.yzw.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="defaultTransactionIsolation" value="2"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10"/>
        <property name="minIdle" value="10"/>
        <property name="maxActive" value="100"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT SYSDATE FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="config"/>
    </bean>

    <bean id="yzwSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="yzwDataSource" />
        <property name="configLocation"  value="classpath:spring/mybatis-configuration.xml" />
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/yzw/*.xml</value>
            </list>
        </property>
        <!-- 分页查询 -->
        <property name="plugins">
            <list>
                <ref bean="mybatisPaginationInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="yzwSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="yzwSqlSessionFactory"/>
    </bean>

    <bean name="yzwMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name="basePackage" value="cn.gtmap.interchange.core.mapper.yzw" />
        <property name="sqlSessionFactoryBeanName" value="yzwSqlSessionFactory" />
    </bean>

    <bean id="yzwCommonMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="cn.gtmap.interchange.core.support.mybatis.mapper.CommonMapper"/>
        <property name="sqlSessionFactory" ref="yzwSqlSessionFactory"/>
    </bean>

    <bean id="yzwEntityMapper" class="cn.gtmap.interchange.core.support.mybatis.mapper.EntityMapper" >
        <property name="commonMapper" ref="yzwCommonMapper"/>
    </bean>

    <bean id="yzwRepository" class="cn.gtmap.interchange.core.support.mybatis.page.repository.Repository">
        <property name="sqlSessionTemplate" ref="yzwSqlSessionTemplate"/>
    </bean>



    <!--事务-->
    <import resource="config-trans.xml"/>
    <!--dozer-->
    <import resource="config-dozer.xml"/>

</beans>