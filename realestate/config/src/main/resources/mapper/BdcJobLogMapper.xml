<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gtmap.realestate.config.core.mapper.BdcJobLogMapper">
	
	<resultMap id="XxlJobLog" type="cn.gtmap.realestate.common.core.domain.job.BdcJobLogDO" >
		<result column="id" property="id" />

		<result column="bdcJobGroupDO" property="bdcJobGroupDO" />
		<result column="jobId" property="jobId" />

		<result column="executorAddress" property="executorAddress" />
		<result column="executorHandler" property="executorHandler" />
	    <result column="executorParam" property="executorParam" />
		<result column="executorShardingParam" property="executorShardingParam" />
		<result column="executorFailRetryCount" property="executorFailRetryCount" />
	    
	    <result column="triggerTime" property="triggerTime" />
	    <result column="triggerCode" property="triggerCode" />
	    <result column="triggerMsg" property="triggerMsg" />
	    
	    <result column="handleTime" property="handleTime" />
	    <result column="handleCode" property="handleCode" />
	    <result column="handleMsg" property="handleMsg" />

		<result column="alarmStatus" property="alarmStatus" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.jobGroup,
		t.jobId,
		t.executorAddress,
		t.executorHandler,
		t.executorParam,
		t.executorShardingParam,
		t.executorFailRetryCount,
		t.triggerTime,
		t.triggerCode,
		t.triggerMsg,
		t.handleTime,
		t.handleCode,
		t.handleMsg,
		t.alarmStatus
	</sql>
	
	<select id="pageList" resultMap="XxlJobLog">
		SELECT t.*
		FROM bdc_job_log t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.jobGroup = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.jobId = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.triggerTime <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.triggerTime <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handleCode = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.triggerCode NOT IN (0, 200) OR
					t.handleCode NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.triggerCode = 200
				AND t.handleCode = 0
			</if>
		</trim>
		ORDER BY t.triggerTime DESC
		and rownum > #{offset}
-- 		LIMIT #{offset}, #{pagesize}
	</select>
	
	<select id="pageListCount" resultType="int">
		SELECT count(1)
		FROM bdc_job_log t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.jobGroup = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.jobId = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.triggerTime <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.triggerTime <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handleCode = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.triggerCode NOT IN (0, 200) OR
					t.handleCode NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.triggerCode = 200
				AND t.handleCode = 0
			</if>
		</trim>
	</select>
	
	<select id="load" parameterType="java.lang.Long" resultMap="XxlJobLog">
		SELECT t.*
		FROM bdc_job_log t
		WHERE t.id = #{id}
	</select>

	
	<insert id="save" parameterType="cn.gtmap.realestate.common.core.domain.job.BdcJobLogDO" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO bdc_job_log (
		jobGroup,
		jobId,
		triggerTime,
		triggerCode,
		handleCode
		) VALUES (
			#{jobGroup},
			#{jobId},
			#{triggerTime},
			#{triggerCode},
			#{handleCode}
		);
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() 
		</selectKey>-->
	</insert>

	<update id="updateTriggerInfo" >
		UPDATE bdc_job_log
		SET
			triggerTime= #{triggerTime},
			triggerCode= #{triggerCode},
			triggerMsg= #{triggerMsg},
			executorAddress= #{executorAddress},
			executorHandler=#{executorHandler},
			executorParam= #{executorParam},
			executorShardingParam= #{executorShardingParam},
			executorFailRetryCount= #{executorFailRetryCount}
		WHERE id= #{id}
	</update>

	<update id="updateHandleInfo">
		UPDATE bdc_job_log
		SET
			handleTime= #{handleTime},
			handleCode= #{handleCode},
			handleMsg= #{handleMsg}
		WHERE id= #{id}
	</update>
	
	<delete id="delete" >
		delete from bdc_job_log
		WHERE jobId = #{jobId}
	</delete>

    <!--<select id="triggerCountByDay" resultType="java.util.Map" >
		SELECT
			DATE_FORMAT(trigger_time,'%Y-%m-%d') triggerDay,
			COUNT(handle_code) triggerDayCount,
			SUM(CASE WHEN (trigger_code in (0, 200) and handle_code = 0) then 1 else 0 end) as triggerDayCountRunning,
			SUM(CASE WHEN handle_code = 200 then 1 else 0 end) as triggerDayCountSuc
		FROM bdc_job_log
		WHERE triggerTime BETWEEN #{from} and #{to}
		GROUP BY triggerDay
		ORDER BY triggerDay
    </select>-->

    <select id="findLogReport" resultType="java.util.Map" >
		SELECT
			COUNT(handleCode) triggerDayCount,
			SUM(CASE WHEN (triggerCode in (0, 200) and handleCode = 0) then 1 else 0 end) as triggerDayCountRunning,
			SUM(CASE WHEN handleCode = 200 then 1 else 0 end) as triggerDayCountSuc
		FROM bdc_job_log
		WHERE triggerTime BETWEEN #{from} and #{to}
    </select>

	<select id="findClearLogIds" resultType="long" >
		select b.id, ROWNUM from (SELECT id FROM bdc_job_log
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND jobGroup = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND jobId = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND triggerTime <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
				SELECT id, ROWNUM FROM(
				SELECT id FROM bdc_job_log t
				<trim prefix="WHERE" prefixOverrides="AND | OR" >
					<if test="jobGroup gt 0">
						AND t.jobGroup = #{jobGroup}
					</if>
					<if test="jobId gt 0">
						AND t.jobId = #{jobId}
					</if>
				</trim>
				ORDER BY t.triggerTime desc
				) t1
				where rownum <![CDATA[ <= ]]> #{clearBeforeNum}
				)
			</if>
		</trim>
		order by id asc ) b
		where rownum <![CDATA[ <= ]]> #{count,jdbcType=INTEGER}

	</select>

	<delete id="clearLog" >
		delete from bdc_job_log
		WHERE id in
		<foreach collection="logIds" item="item" open="(" close=")" separator="," >
			#{item}
		</foreach>
	</delete>

	<select id="findFailJobLogIds" resultType="long" >
		select a.id,ROWNUM from ( SELECT id FROM bdc_job_log log
		WHERE  not (
			(triggerCode in (0, 200) and handleCode = 0)
		   OR
			(handleCode = 200))
		AND log.alarmStatus = 0
		ORDER BY log.id ASC ) a
		where ROWNUM <![CDATA[ <= ]]> #{count,jdbcType=INTEGER}

	</select>

	<update id="updateAlarmStatus" >
		UPDATE bdc_job_log
		SET
			alarmStatus = #{newAlarmStatus}
		WHERE id= #{logId} AND alarmStatus = #{oldAlarmStatus}
	</update>

	<select id="findLostJobIds" resultType="long" >
		SELECT
			t.id
		FROM
			bdc_job_log t
			LEFT JOIN bdc_job_registry t2 ON t.executorAddress = t2.registryvalue
		WHERE
			t.triggerCode = 200
				AND t.handleCode = 0
		  AND t.triggerTime <![CDATA[<=]]> to_date(#{losedTime}, 'yyyymmddhh24miss')
				AND t2.id IS NULL
	</select>
	<!--
	SELECT t.id
	FROM bdc_job_log AS t
	WHERE t.trigger_code = 200
		and t.handle_code = 0
		and t.trigger_time <![CDATA[ <= ]]> #{losedTime}
		and t.executor_address not in (
			SELECT t2.registry_value
			FROM bdc_job_registry AS t2
		)
	-->

</mapper>